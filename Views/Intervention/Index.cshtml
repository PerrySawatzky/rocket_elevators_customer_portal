@model dynamic
@{
    ViewData["Title"] = "Intervention Form";
}
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@* <link href="dashboard.css" rel="stylesheet"> *@
<link rel="stylesheet" href="~/css/intervention.css" />

@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
<div>
    <h1 hidden id="userEmailReally">@user.Email</h1>
</div>
    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Intervention Form</h1>
    </div>

    <form method="post" name="" id="">
        <div class="row">
            <div class="col-md-3">
                <div >
                    <h4>Your ID:</h4> <h4 id="intervention_building_id_div"></h4>
                </div>
                <select cols="40" onchange="getBattery()" class="form-control" id="intervention_building_id">
                <option>Select Building</option>                        
                </select>
                <select cols="40" onchange="getColumn()" class="form-control" id="intervention_battery_id">
                <option>Select Battery</option>                        
                </select>
                <select cols="40" onchange="getElevator()" class="form-control" id="intervention_column_id">
                <option>Select Column</option>                       
                </select>
                <select cols="40" class="form-control" id="intervention_elevator_id">
                <option>Select Elevator</option>               
                </select>
                <div class="row">
                    <div class="col-md-12">
                        <label for="textarea">Report</label><br />
                        <textarea id="textarea" rows="5" cols="40"></textarea>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <button onclick="postIntervention()" class="btn btn-primary"><i class="fa fa-check"></i> SUBMIT </button>
                    </div>
                </div>

            </div>
        </div>
    </form>

</main>


}
@if (SignInManager.IsSignedIn(User) == false)
{
     <div class="text-center">
        <h1 class="display-4">Please log in</h1>
        <a asp-action="index" asp-controller="home">Home</a> <br>
    </div>
}
 
@section Scripts {
<script type="text/javascript">
   function postIntervention() {
        // $(document).ready(function ModifyContactInfo() {
            var data = {
                "author_id": 2,
                "customer_id": 22,
                "building_id": 22,
                "battery_id": 22,
                "column_id": 22,
                "elevator_id": 43,
                "employee_id": 1,
                "result": "Incomplete",
                "status": "InProgress"
            };
            console.log(data)
            // var customer = new Customer();  
            // customer.CompanyName = "";  
            // customer.NameOfContact = ""; 
            //  $("#update").click(function () {
                
                fetch("http://localhost:5002/api/interventions", {
                method: "POST", 
                body: data
                }).then(res => {
                console.log("Request complete! response:", res);
                });

                @* $.ajax({  
                    url: 'http://localhost:5002/api/interventions',  
                    type: 'post',  
                    // dataType: 'json',  
                    data: JSON.stringify(data),
                    headers: {
                        "Access-Control-Allow-Origin": "*",
                        "Access-Control-Allow-Methods": "HEAD, GET, POST, PUT, PATCH, DELETE",
                        "Access-Control-Allow-Headers": "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With",
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    success: function (data, textStatus, xhr) {  
                        console.log(data);
                        alert('Info updated');
                    },  
                    error: function (data, xhr, textStatus, errorThrown) {  
                        console.log('Error in Operation');
                        console.log(data);
                        console.log('Failed to update');
                    }  
                });   *@
            
        }
$( document ).ready(function() {
         var userEmail = document.getElementById("userEmailReally").innerHTML;
         $.ajax({
                cache: false,
                url: 'https://whispering-tundra-91467.herokuapp.com/api/customers/',
                type: 'GET',
                dataType: 'json',
                success: function (obj) {
                    for (var i = 0; i < obj.length; i++){
                        if (obj[i].company_contact_email == userEmail){                            
                            var row = '<h4 id="customerID" value="' + obj[i].id + '">' + obj[i].id + '</h4>';
                            $(row).appendTo("#intervention_building_id_div");
                            setTimeout(getBuildings, 1);
                        }
                    }
                },
                error: function (obj) {
                    console.log('Something happened');
                }
            });
    });
   
    function getElevator() {
    var columnID = document.getElementById("columnID").value;
    $.ajax({
        cache: false,
        url: 'https://whispering-tundra-91467.herokuapp.com/api/elevators/',
        type: 'GET',
        dataType: 'json',
        success: function (obj) {
            for (var i = 0; i < obj.length; i++){
                if (obj[i].column_id == columnID){
                    
                    var row = '<option id="elevatorID" value="' + obj[i].id + '">' + obj[i].id + '</option>';
                    $(row).appendTo("#intervention_elevator_id");
                }
            }
        },
        error: function (obj) {
            console.log('Something happened');
        }
    });
    }
    function getColumn() {
    var batteryID = document.getElementById("batteryID").value;
    $.ajax({
        cache: false,
        url: 'https://whispering-tundra-91467.herokuapp.com/api/columns/',
        type: 'GET',
        dataType: 'json',
        success: function (obj) {
            for (var i = 0; i < obj.length; i++){
                if (obj[i].battery_id == batteryID){
                    var row = '<option id="columnID" value="' + obj[i].id + '">' + obj[i].id + '</option>';
                    $(row).appendTo("#intervention_column_id");
                }
            }
        },
        error: function (obj) {
            console.log('Something happened');
        }
    });
    }
    function getBattery() {
        var buildingID = document.getElementById("buildingID").value;
        $.ajax({
            cache: false,
            url: 'https://whispering-tundra-91467.herokuapp.com/api/batteries/',
            type: 'GET',
            dataType: 'json',
            success: function (obj) {
                for (var i = 0; i < obj.length; i++){
                    if (obj[i].building_id == buildingID){
                        var row = '<option id="batteryID" value="' + obj[i].id + '">' + obj[i].id + '</option>';
                        $(row).appendTo("#intervention_battery_id");
                        
                    }
                }
            },
            error: function (obj) {
                console.log('Something happened');
            }
        });
    }
    function getBuildings() {
        var customerID = document.getElementById("customerID").innerHTML;
        $.ajax({
            cache: false,
            url: 'https://whispering-tundra-91467.herokuapp.com/api/buildings/',
            type: 'GET',
            dataType: 'json',
            success: function (obj) {
                for (var i = 0; i < obj.length; i++){
                    if (obj[i].customer_id == customerID){
                        var row = '<option id="buildingID" value="' + obj[i].id + '">' + obj[i].address_of_the_building + '</option>';
                        $(row).appendTo("#intervention_building_id");
                    }
                }
            },
            error: function (obj) {
                console.log('Something happened');
            }
        });
    }
</script>
}

@* <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>

<script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js" crossorigin="anonymous"></script> *@
@* <script src="~/js/dashboard.js"></script> *@
