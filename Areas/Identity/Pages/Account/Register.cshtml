@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}
@using System.Net;
@using System.IO;
@using System.Net.Http;

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h4>Create a new account.</h4>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Input.Email"></label>
                <input asp-for="Input.Email" class="form-control" />
                <script>
                    function pleaseWork() {
                       
                    }
                </script>
                
                @{
                    @* async void pleaseWork(Input.Email)
                    {  onclick=@pleaseWork()
                        Console.WriteLine ("fuck");
                        var request = new HttpClient();
                        var response = await request.GetAsync("https://whispering-tundra-91467.herokuapp.com/api/users");
                        var emails = response.Content.ReadAsStringAsync().Result;
                        if (emails.Contains(Input.Email))
                        {
                            console.WriteLine("Mama we made it");
                        }
                        else
                        {
                            console.log("Mama we haven't it");
                        }
                        
                        return "fook";
                        @* WebRequest request = WebRequest.Create ("https://whispering-tundra-91467.herokuapp.com/api/users/nicolas.genest@codeboxx.biz");
                        // If required by the server, set the credentials.
                        request.Credentials = CredentialCache.DefaultCredentials;
                        // Get the response.
                        HttpWebResponse response = (HttpWebResponse)request.GetResponse ();
                        if (response.StatusDescription == "Success")
                        { 
                        // Display the status.
                        Console.WriteLine (response.StatusDescription);
                        return response.StatusDescription;
                        // Get the stream containing content returned by the server.
                        Stream dataStream = response.GetResponseStream ();
                        // Open the stream using a StreamReader for easy access.
                        StreamReader reader = new StreamReader (dataStream);
                        // Read the content.
                        string responseFromServer = reader.ReadToEnd ();
                        // Display the content.
                        Console.WriteLine (responseFromServer);
                        // Cleanup the streams and the response.
                        reader.Close ();
                        dataStream.Close ();
                        response.Close ();
                        }
                        else 
                        {
                        Console.WriteLine ("What how");
                        }  
                    } *@
                }
                
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password"></label>
                <input asp-for="Input.Password" class="form-control" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.ConfirmPassword"></label>
                <input asp-for="Input.ConfirmPassword" class="form-control" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button type="submit"  class="btn btn-primary">Register</button>
        </form>
    </div>
    @* <div class="col-md-6 col-md-offset-2">
        <section>
            <h4>Use another service to register.</h4>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div> *@
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
